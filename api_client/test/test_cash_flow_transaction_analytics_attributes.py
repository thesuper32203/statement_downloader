# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cash_flow_transaction_analytics_attributes import CashFlowTransactionAnalyticsAttributes

class TestCashFlowTransactionAnalyticsAttributes(unittest.TestCase):
    """CashFlowTransactionAnalyticsAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CashFlowTransactionAnalyticsAttributes:
        """Test CashFlowTransactionAnalyticsAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CashFlowTransactionAnalyticsAttributes`
        """
        model = CashFlowTransactionAnalyticsAttributes()
        if include_optional:
            return CashFlowTransactionAnalyticsAttributes(
                activity_deposits_credits_for_the_report_time_period = [
                    openapi_client.models.cash_flow_activity_deposits_credits.CashFlowActivityDepositsCredits(
                        date = '2020-03-25', 
                        deposits_credits = 500, 
                        transaction_description = 'VENMO            CASHOUT', )
                    ],
                activity_withdrawals_debits_for_the_report_time_period = [
                    openapi_client.models.cash_flow_activity_withdrawals_debits.CashFlowActivityWithdrawalsDebits(
                        date = '2020-03-25', 
                        transaction_description = 'Payment to Chase card ending in', 
                        withdrawals_debits = 15.69, )
                    ],
                average_transaction_value_by_month_for_the_report_time_period = [
                    openapi_client.models.obb_date_range_and_amount.ObbDateRangeAndAmount(
                        amount = 890.99, 
                        period = 'last30to1', 
                        period_begin_date = '2022-03-01', 
                        period_end_date = '2022-03-30', )
                    ],
                historic_weeks_with_zero_transactions = openapi_client.models.cash_flow_num_weeks_zeros.CashFlowNumWeeksZeros(
                    historic_number_of_weeks_with_data_available = 10, 
                    historic_number_of_weeks_zero_transactions = 5, 
                    historic_weeks_with_zero_transactions = [
                        openapi_client.models.obb_week_of_year.ObbWeekOfYear(
                            from_date = '2020-01-01', 
                            to_date = '2020-01-07', 
                            week = 1, )
                        ], ),
                last_transaction_date = [
                    openapi_client.models.cash_flow_transaction_analytics_attributes_last_transaction_date_inner.CashFlowTransactionAnalyticsAttributes_lastTransactionDate_inner(
                        date = '2020-03-25', 
                        deposits_credits = 500, 
                        withdrawals_debits = 500, 
                        zero_amount_transaction = 0, 
                        transaction_description = 'VENMO            CASHOUT', )
                    ],
                net_cash_flow_by_month_for_the_report_time_period = [
                    openapi_client.models.obb_date_range_and_amount.ObbDateRangeAndAmount(
                        amount = 890.99, 
                        period = 'last30to1', 
                        period_begin_date = '2022-03-01', 
                        period_end_date = '2022-03-30', )
                    ],
                net_cash_flow_for_the_report_time_period = 1544.94
            )
        else:
            return CashFlowTransactionAnalyticsAttributes(
                activity_deposits_credits_for_the_report_time_period = [
                    openapi_client.models.cash_flow_activity_deposits_credits.CashFlowActivityDepositsCredits(
                        date = '2020-03-25', 
                        deposits_credits = 500, 
                        transaction_description = 'VENMO            CASHOUT', )
                    ],
                activity_withdrawals_debits_for_the_report_time_period = [
                    openapi_client.models.cash_flow_activity_withdrawals_debits.CashFlowActivityWithdrawalsDebits(
                        date = '2020-03-25', 
                        transaction_description = 'Payment to Chase card ending in', 
                        withdrawals_debits = 15.69, )
                    ],
                average_transaction_value_by_month_for_the_report_time_period = [
                    openapi_client.models.obb_date_range_and_amount.ObbDateRangeAndAmount(
                        amount = 890.99, 
                        period = 'last30to1', 
                        period_begin_date = '2022-03-01', 
                        period_end_date = '2022-03-30', )
                    ],
        )
        """

    def testCashFlowTransactionAnalyticsAttributes(self):
        """Test CashFlowTransactionAnalyticsAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
