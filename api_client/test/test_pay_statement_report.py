# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pay_statement_report import PayStatementReport

class TestPayStatementReport(unittest.TestCase):
    """PayStatementReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayStatementReport:
        """Test PayStatementReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayStatementReport`
        """
        model = PayStatementReport()
        if include_optional:
            return PayStatementReport(
                id = 'u4hstnnak45g',
                customer_type = 'active',
                customer_id = 1005061234,
                request_id = 'cjqm4wtdcn',
                requester_name = 'Finicity Test API',
                end_user = openapi_client.models.consumer_end_user.ConsumerEndUser(
                    name = 'John', 
                    address = '434 W Ascension Way', 
                    city = 'Murray', 
                    state = 'UT', 
                    zip = '84123', 
                    phone = '1-801-984-4200', 
                    email = 'myname@mycompany.com', 
                    url = 'testurl.com', ),
                created_date = 1607450357,
                title = 'Finicity Asset Ready Report (CRA)',
                consumer_id = '0bf46322c167b562e6cbed9d40e19a4c',
                consumer_ssn = '9999',
                consumer_details = openapi_client.models.consumer_details.ConsumerDetails(
                    id = '0bf46322c167b562e6cbed9d40e19a4c', 
                    first_name = 'John', 
                    middle_name = 'L', 
                    last_name = 'Smith', 
                    address = '434 W Ascension Way', 
                    city = 'Murray', 
                    state = 'UT', 
                    zip = '84123', 
                    phone = '1-801-984-4200', 
                    ssn = '9999', 
                    email = 'myname@mycompany.com', ),
                dispute_statement = 'Statement dispute text',
                type = 'voi',
                status = 'inProgress',
                constraints = None,
                errors = [
                    openapi_client.models.error_message.ErrorMessage(
                        code = 10001, 
                        status = '401', 
                        title = 'Connecting accounts error', 
                        level = 'error', 
                        message = 'Invalid authorization credentials', 
                        user_message = 'The session has expired or is invalid', 
                        asset_id = '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178', 
                        account_id = '5011648377', 
                        external_transaction_id = 'MAC1005061234', 
                        tags = 'AGG', )
                    ],
                portfolio_id = 'y4zsgccj4xpw-6-port',
                start_date = 1607450357,
                end_date = 1607450357,
                report_style = 'credentialedPayroll',
                number_of_billable_assets = 1,
                asset_ids = [
                    '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178'
                    ],
                pay_statements = [
                    openapi_client.models.voie_pay_statement.VOIEPayStatement(
                        pay_period = 'LastPayPeriod', 
                        billable = True, 
                        asset_id = '6f8fb0a0-e882-4f57-b672-cf53f1397581', 
                        pay_date = 1559241000, 
                        start_date = 1557513000, 
                        end_date = 1558722600, 
                        net_pay_current = 1802.22, 
                        net_pay_ytd = 36000, 
                        gross_pay_current = 24200, 
                        gross_pay_ytd = 72600, 
                        payroll_provider = 'Finicity', 
                        match_type = 'PARTIAL', 
                        employer = openapi_client.models.employer.Employer(
                            name = 'Rocket Surgery', 
                            address1 = 'Address 1', 
                            address2 = 'Address 2', 
                            city = 'City', 
                            state = 'TX', 
                            zip = '99999', ), 
                        employee = openapi_client.models.employee.Employee(
                            name = 'Patrick Purchaser', 
                            address1 = 'Address 1', 
                            address2 = 'Address 2', 
                            city = 'City', 
                            state = 'TX', 
                            zip = '99999', ), 
                        pay_stat = [
                            openapi_client.models.pay_stat.PayStat(
                                name = 'regular 1', 
                                type = '', 
                                description = 'regular income', 
                                rate = 10.0, 
                                units = 60.0, 
                                amount_current = 6000, 
                                amount_ytd = 18000, )
                            ], 
                        deductions = [
                            openapi_client.models.deduction.Deduction(
                                name = '401', 
                                description = '401k', 
                                amount_current = 1744.61, 
                                amount_ytd = 1744.6, 
                                type = '401 Deductions', )
                            ], 
                        direct_deposits = [
                            openapi_client.models.direct_deposit.DirectDeposit(
                                fi_name = 'FinBank', 
                                account_type_code = 'Savings', 
                                account_type_name = 'Checking', 
                                description = 'Payroll', 
                                amount = 12.34, 
                                account_last_four = '3337', 
                                routing_number = '30207583', )
                            ], )
                    ]
            )
        else:
            return PayStatementReport(
        )
        """

    def testPayStatementReport(self):
        """Test PayStatementReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
