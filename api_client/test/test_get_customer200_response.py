# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_customer200_response import GetCustomer200Response

class TestGetCustomer200Response(unittest.TestCase):
    """GetCustomer200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCustomer200Response:
        """Test GetCustomer200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCustomer200Response`
        """
        model = GetCustomer200Response()
        if include_optional:
            return GetCustomer200Response(
                id = '1005061234',
                username = 'customerusername1',
                first_name = 'John',
                last_name = 'Smith',
                phone = '1-801-984-4200',
                email = 'myname@mycompany.com',
                type = 'active',
                created_date = '1607450357',
                last_modified_date = '1607450357',
                application_id = '00278431-b712-4f30-a044-b611f25e533d'
            )
        else:
            return GetCustomer200Response(
                id = '1005061234',
                username = 'customerusername1',
                type = 'active',
                created_date = '1607450357',
        )
        """

    def testGetCustomer200Response(self):
        """Test GetCustomer200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
