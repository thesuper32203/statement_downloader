# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device_insights import DeviceInsights

class TestDeviceInsights(unittest.TestCase):
    """DeviceInsights unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceInsights:
        """Test DeviceInsights
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceInsights`
        """
        model = DeviceInsights()
        if include_optional:
            return DeviceInsights(
                scores = openapi_client.models.device_scores.DeviceScores(
                    device_risk_factor = 5, 
                    device_insight_factor = 2, 
                    device_trust_factor = 4, ),
                details = openapi_client.models.device_details.DeviceDetails(
                    id = openapi_client.models.device_id.DeviceID(
                        u_device_id = 'UDID-9284e12b85b0d2763c13d734c70b1d62', ), 
                    device_info = openapi_client.models.device_info.DeviceInfo(
                        browser = 'Safari', 
                        platform = 'iOS', 
                        device_type = 'iPhone', ), )
            )
        else:
            return DeviceInsights(
        )
        """

    def testDeviceInsights(self):
        """Test DeviceInsights"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
