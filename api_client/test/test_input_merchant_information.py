# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.input_merchant_information import InputMerchantInformation

class TestInputMerchantInformation(unittest.TestCase):
    """InputMerchantInformation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InputMerchantInformation:
        """Test InputMerchantInformation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InputMerchantInformation`
        """
        model = InputMerchantInformation()
        if include_optional:
            return InputMerchantInformation(
                merchant_descriptor = 'MCDONALDS10649CLINTONSC',
                name = 'McDonalds',
                line1 = '101 S Broad St',
                city = 'Clinton',
                state = 'SC',
                postal_code = '29325',
                country = 'US',
                phone_number = '8648334816',
                website = 'https://www.mcdonalds.com',
                merchant_category_code = '5814',
                merchant_category_name = 'FAST FOOD RESTAURANTS'
            )
        else:
            return InputMerchantInformation(
        )
        """

    def testInputMerchantInformation(self):
        """Test InputMerchantInformation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
