# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.customer_account_detail import CustomerAccountDetail

class TestCustomerAccountDetail(unittest.TestCase):
    """CustomerAccountDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerAccountDetail:
        """Test CustomerAccountDetail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerAccountDetail`
        """
        model = CustomerAccountDetail()
        if include_optional:
            return CustomerAccountDetail(
                date_as_of = 1607450357,
                available_balance_amount = 5678.78,
                open_date = 1607450357,
                period_start_date = 1607450357,
                period_end_date = 1607450357,
                period_interest_rate = 13.245,
                period_deposit_amount = 2356.56,
                period_interest_amount = 1234.56,
                interest_ytd_amount = 1056.67,
                interest_prior_ytd_amount = 3056.79,
                maturity_date = 1607450357,
                interest_rate = '15.789',
                credit_available_amount = 3000,
                credit_max_amount = 7000,
                cash_advance_available_amount = 2000,
                cash_advance_max_amount = 3000,
                cash_advance_balance = 1000,
                cash_advance_interest_rate = 21.5,
                current_balance = 5789.34,
                payment_min_amount = 456.78,
                payment_due_date = 1607450357,
                previous_balance = 1234.56,
                statement_start_date = 1607450357,
                statement_end_date = 1607450357,
                statement_purchase_amount = 2345.9,
                statement_finance_amount = 156.78,
                statement_credit_amount = 345,
                reward_earned_balance = 500.2,
                past_due_amount = 3688.99,
                last_payment_amount = 567.89,
                last_payment_date = 1607450357,
                statement_close_balance = 2456.69,
                term_of_ml = '36',
                ml_holder_name = 'John Smith',
                description = 'a description',
                late_fee_amount = 35,
                payoff_amount = 45567.98,
                payoff_amount_date = 1607450357,
                original_maturity_date = 1607450357,
                principal_balance = 45056.7,
                escrow_balance = 2345.01,
                interest_period = 'monthly',
                initial_ml_amount = 65000,
                initial_ml_date = 1607450357,
                next_payment_principal_amount = 1256.67,
                next_payment_interest_amount = 234.56,
                next_payment = 1578,
                next_payment_date = 1607450357,
                last_payment_due_date = 1607450357,
                last_payment_receive_date = 1607450357,
                last_payment_principal_amount = 1256.67,
                last_payment_interest_amount = 234.56,
                last_payment_escrow_amount = 456.78,
                last_payment_last_fee_amount = 150,
                last_payment_late_charge = 50,
                ytd_principal_paid = 5432.01,
                ytd_interest_paid = 3948.56,
                ytd_insurance_paid = 1345.89,
                ytd_tax_paid = 1489,
                auto_pay_enrolled = True,
                margin_allowed = True,
                cash_account_allowed = True,
                collateral = 'nissan sentra',
                current_school = 'utah valley university',
                first_payment_date = 1607450357,
                first_mortgage = True,
                loan_payment_freq = 'monthly',
                original_school = 'Brigham young university',
                recurring_payment_amount = 456.23,
                lender = 'utah community credit union',
                ending_balance_amount = 234789.45,
                loan_term_type = 'fixed',
                payments_made = 14,
                balloon_amount = 1678.56,
                projected_interest = 10456.78,
                interest_paid_ltd = 56789.34,
                interest_rate_type = 'variable',
                loan_payment_type = 'principle',
                repayment_plan = 'Standard, Graduated, Extended, Pay As You Earn, and more.',
                payments_remaining = 45,
                margin_balance = 456,
                short_balance = 12456.89,
                available_cash_balance = 3456.78,
                maturity_value_amount = 34067.78,
                vested_balance = 45000,
                emp_match_amount = 256.99,
                emp_pretax_contrib_amount = 450,
                emp_pretax_contrib_amount_ytd = 700,
                contrib_total_ytd = 2045,
                cash_balance_amount = 2000,
                pre_tax_amount = 78564.99,
                after_tax_amount = 68564.99,
                match_amount = 378,
                profit_sharing_amount = 34678.89,
                rollover_amount = 101234.67,
                other_vest_amount = 34000,
                other_nonvest_amount = 26000,
                current_loan_balance = 345789.23,
                loan_rate = 3.275,
                buy_power = 34567.89,
                rollover_ltd = 23456.78,
                loan_award_id = '1234568',
                original_interest_rate = 12,
                guarantor = 'FinBank',
                owner = 'FinBank',
                interest_subsidy_type = 'Subsidy type',
                interest_balance = 2000,
                remaining_term_of_ml = 2,
                initial_interest_rate = 34567.89,
                fees_balance = 150,
                loan_ytd_interest_paid = 5623.23,
                loan_ytd_fees_paid = 5621.23,
                loan_ytd_principal_paid = 5621.23,
                loan_status = 'Deferment',
                loan_status_start_date = 1607450357,
                loan_status_end_date = 1607450357,
                weighted_interest_rate = 12,
                repayment_plan_start_date = 1607450357,
                repayment_plan_end_date = 1607450357,
                expected_payoff_date = 1607450357,
                out_of_school_date = 1607450357,
                convert_to_repayment = 1607450357,
                days_delinquent = 5,
                total_principal_paid = 15000,
                total_interest_paid = 1125,
                total_amount_paid = 16125,
                statement_close_date = 1607450357,
                loan_type_desc = 'Conventional 30-Year Mortgage'
            )
        else:
            return CustomerAccountDetail(
        )
        """

    def testCustomerAccountDetail(self):
        """Test CustomerAccountDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
