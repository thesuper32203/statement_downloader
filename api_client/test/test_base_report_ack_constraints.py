# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.base_report_ack_constraints import BaseReportAckConstraints

class TestBaseReportAckConstraints(unittest.TestCase):
    """BaseReportAckConstraints unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaseReportAckConstraints:
        """Test BaseReportAckConstraints
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaseReportAckConstraints`
        """
        model = BaseReportAckConstraints()
        if include_optional:
            return BaseReportAckConstraints(
                analytics_report_data = openapi_client.models.analytics_report_data.AnalyticsReportData(
                    for_cra_purpose = True, 
                    applicant_is_personal_guarantor = True, 
                    time_interval_types = ["MONTHLY_CALENDAR"], ),
                account_ids = [5011648377, 5011648378, 5011648379],
                report_custom_fields = [
                    openapi_client.models.report_custom_field.ReportCustomField(
                        label = 'loanID', 
                        value = '123456', 
                        shown = True, )
                    ],
                from_date = 1607450357,
                show_nsf = False,
                income_stream_confidence_minimum = 50,
                voie_with_interview_data = openapi_client.models.voie_with_interview_data.VOIEWithInterviewData(
                    tx_verify_interview = [
                        openapi_client.models.tx_verify_interview.TxVerifyInterview(
                            asset_id = '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178', 
                            accounts = ["5011648377","5011648378","5011648379"], )
                        ], 
                    extract_earnings = True, 
                    extract_deductions = True, 
                    extract_direct_deposit = True, ),
                voie_with_statement_data = openapi_client.models.voie_with_statement_data.VOIEWithStatementData(
                    asset_ids = [
                        '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178'
                        ], 
                    extract_earnings = True, 
                    extract_deductions = True, 
                    extract_direct_deposit = True, ),
                statement_report_data = openapi_client.models.statement_data.StatementData(
                    account_id = 5011648377, 
                    statement_index = 1, ),
                to_date = 1607450357,
                include_pending = True,
                find_transaction = [
                    openapi_client.models.find_transaction_constraints_inner.FindTransactionConstraints_inner(
                        find_transaction_description_memo = 'Paycheck', 
                        find_transaction_amount_from = 100, 
                        find_transaction_amount_to = 100, 
                        find_transaction_category = ["Paycheck","Groceries"], )
                    ],
                income_from_date = 1607450357,
                voai_pdf_deposit_view = True,
                payroll_data = openapi_client.models.payroll_data_out.PayrollDataOut(
                    payroll_data_retrieval_id = 'hahvhe2k0000', 
                    payroll_aggregator_response_id = 'hahvhe2k0000', 
                    consent_method = 'Written Generic - Finicity Set', 
                    employment_ids = [
                        '123v3bv2s5n'
                        ], 
                    payroll_account_ids = [
                        '018b8f10-fdf8-0ef7-ded5-34a17c34d86f'
                        ], 
                    report_id = 'u4hstnnak45g', ),
                pay_statements_from_date = 1607450357,
                report_id = 'u4hstnnak45g',
                paystatement_report = openapi_client.models.pay_statement_data.PayStatementData(
                    asset_ids = [
                        '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178'
                        ], 
                    extract_earnings = True, 
                    extract_deductions = True, 
                    extract_direct_deposit = True, )
            )
        else:
            return BaseReportAckConstraints(
                voie_with_interview_data = openapi_client.models.voie_with_interview_data.VOIEWithInterviewData(
                    tx_verify_interview = [
                        openapi_client.models.tx_verify_interview.TxVerifyInterview(
                            asset_id = '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178', 
                            accounts = ["5011648377","5011648378","5011648379"], )
                        ], 
                    extract_earnings = True, 
                    extract_deductions = True, 
                    extract_direct_deposit = True, ),
                voie_with_statement_data = openapi_client.models.voie_with_statement_data.VOIEWithStatementData(
                    asset_ids = [
                        '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178'
                        ], 
                    extract_earnings = True, 
                    extract_deductions = True, 
                    extract_direct_deposit = True, ),
                statement_report_data = openapi_client.models.statement_data.StatementData(
                    account_id = 5011648377, 
                    statement_index = 1, ),
                payroll_data = openapi_client.models.payroll_data_out.PayrollDataOut(
                    payroll_data_retrieval_id = 'hahvhe2k0000', 
                    payroll_aggregator_response_id = 'hahvhe2k0000', 
                    consent_method = 'Written Generic - Finicity Set', 
                    employment_ids = [
                        '123v3bv2s5n'
                        ], 
                    payroll_account_ids = [
                        '018b8f10-fdf8-0ef7-ded5-34a17c34d86f'
                        ], 
                    report_id = 'u4hstnnak45g', ),
                paystatement_report = openapi_client.models.pay_statement_data.PayStatementData(
                    asset_ids = [
                        '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178'
                        ], 
                    extract_earnings = True, 
                    extract_deductions = True, 
                    extract_direct_deposit = True, ),
        )
        """

    def testBaseReportAckConstraints(self):
        """Test BaseReportAckConstraints"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
