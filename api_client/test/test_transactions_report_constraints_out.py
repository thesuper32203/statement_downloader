# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.transactions_report_constraints_out import TransactionsReportConstraintsOut

class TestTransactionsReportConstraintsOut(unittest.TestCase):
    """TransactionsReportConstraintsOut unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionsReportConstraintsOut:
        """Test TransactionsReportConstraintsOut
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionsReportConstraintsOut`
        """
        model = TransactionsReportConstraintsOut()
        if include_optional:
            return TransactionsReportConstraintsOut(
                account_ids = ["5011648377","5011648378","5011648379"],
                from_date = 1607450357,
                to_date = 1607450357,
                include_pending = True,
                report_custom_fields = [
                    openapi_client.models.report_custom_field.ReportCustomField(
                        label = 'loanID', 
                        value = '123456', 
                        shown = True, )
                    ],
                find_transaction = [
                    openapi_client.models.find_transaction_constraints_inner.FindTransactionConstraints_inner(
                        find_transaction_description_memo = 'Paycheck', 
                        find_transaction_amount_from = 100, 
                        find_transaction_amount_to = 100, 
                        find_transaction_category = ["Paycheck","Groceries"], )
                    ]
            )
        else:
            return TransactionsReportConstraintsOut(
        )
        """

    def testTransactionsReportConstraintsOut(self):
        """Test TransactionsReportConstraintsOut"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
