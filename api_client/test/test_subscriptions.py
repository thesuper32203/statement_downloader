# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscriptions import Subscriptions

class TestSubscriptions(unittest.TestCase):
    """Subscriptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Subscriptions:
        """Test Subscriptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Subscriptions`
        """
        model = Subscriptions()
        if include_optional:
            return Subscriptions(
                count = 10,
                offset = 5,
                limit = 10,
                total = 10,
                subscriptions = [
                    openapi_client.models.subscription_detail.SubscriptionDetail(
                        subscription_id = '661f3c48-f596-423b-81f5-d275d4dd1345', 
                        url = 'https://example.com/example_webhook', 
                        events = [
                            openapi_client.models.event.Event(
                                webhook_event_id = '661f3c48-f596-423b-81f5-d275d4dd1346', 
                                name = 'authorization.accesstoken.expiry', 
                                url = 'https://example.com/example_webhook', 
                                status = 'active', 
                                condition = openapi_client.models.condition.Condition(
                                    subscribe_for = 'institutionId', 
                                    includes = ["100010","100011"], 
                                    excludes = ["170718","170788"], ), )
                            ], 
                        status = 'active', 
                        created_date = '2024-01-01T11:18:50Z', 
                        last_updated_date = '2024-01-01T11:18:50Z', )
                    ]
            )
        else:
            return Subscriptions(
                count = 10,
                offset = 5,
                limit = 10,
                total = 10,
                subscriptions = [
                    openapi_client.models.subscription_detail.SubscriptionDetail(
                        subscription_id = '661f3c48-f596-423b-81f5-d275d4dd1345', 
                        url = 'https://example.com/example_webhook', 
                        events = [
                            openapi_client.models.event.Event(
                                webhook_event_id = '661f3c48-f596-423b-81f5-d275d4dd1346', 
                                name = 'authorization.accesstoken.expiry', 
                                url = 'https://example.com/example_webhook', 
                                status = 'active', 
                                condition = openapi_client.models.condition.Condition(
                                    subscribe_for = 'institutionId', 
                                    includes = ["100010","100011"], 
                                    excludes = ["170718","170788"], ), )
                            ], 
                        status = 'active', 
                        created_date = '2024-01-01T11:18:50Z', 
                        last_updated_date = '2024-01-01T11:18:50Z', )
                    ],
        )
        """

    def testSubscriptions(self):
        """Test Subscriptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
