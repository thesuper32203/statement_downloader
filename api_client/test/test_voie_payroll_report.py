# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.voie_payroll_report import VOIEPayrollReport

class TestVOIEPayrollReport(unittest.TestCase):
    """VOIEPayrollReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VOIEPayrollReport:
        """Test VOIEPayrollReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VOIEPayrollReport`
        """
        model = VOIEPayrollReport()
        if include_optional:
            return VOIEPayrollReport(
                id = 'u4hstnnak45g',
                customer_type = 'active',
                customer_id = 1005061234,
                request_id = 'cjqm4wtdcn',
                requester_name = 'Finicity Test API',
                end_user = openapi_client.models.consumer_end_user.ConsumerEndUser(
                    name = 'John', 
                    address = '434 W Ascension Way', 
                    city = 'Murray', 
                    state = 'UT', 
                    zip = '84123', 
                    phone = '1-801-984-4200', 
                    email = 'myname@mycompany.com', 
                    url = 'testurl.com', ),
                created_date = 1607450357,
                title = 'Finicity Asset Ready Report (CRA)',
                consumer_id = '0bf46322c167b562e6cbed9d40e19a4c',
                consumer_ssn = '9999',
                consumer_details = openapi_client.models.consumer_details.ConsumerDetails(
                    id = '0bf46322c167b562e6cbed9d40e19a4c', 
                    first_name = 'John', 
                    middle_name = 'L', 
                    last_name = 'Smith', 
                    address = '434 W Ascension Way', 
                    city = 'Murray', 
                    state = 'UT', 
                    zip = '84123', 
                    phone = '1-801-984-4200', 
                    ssn = '9999', 
                    email = 'myname@mycompany.com', ),
                dispute_statement = 'Statement dispute text',
                type = 'voi',
                status = 'inProgress',
                constraints = None,
                errors = [
                    openapi_client.models.error_message.ErrorMessage(
                        code = 10001, 
                        status = '401', 
                        title = 'Connecting accounts error', 
                        level = 'error', 
                        message = 'Invalid authorization credentials', 
                        user_message = 'The session has expired or is invalid', 
                        asset_id = '097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178', 
                        account_id = '5011648377', 
                        external_transaction_id = 'MAC1005061234', 
                        tags = 'AGG', )
                    ],
                portfolio_id = 'y4zsgccj4xpw-6-port',
                employment_history = [
                    openapi_client.models.payroll_employment_history_voie.PayrollEmploymentHistoryVOIE(
                        as_of_date = 1596175200, 
                        employment_id = '123v3bv2s5n', 
                        employer_name = 'ACME INC', 
                        payroll_source = 'finPayroll', 
                        payroll_provider = 'Paychex', 
                        employee = openapi_client.models.payroll_employee_record.PayrollEmployeeRecord(
                            name = 'John Doe Smith', 
                            given_name = 'John', 
                            middle_name = 'Doe', 
                            family_name = 'Smith', 
                            address = [
                                openapi_client.models.payroll_employee_address.PayrollEmployeeAddress(
                                    address1 = 'Address 1', 
                                    city = 'City', 
                                    state = 'TX', 
                                    zip = '99999', )
                                ], ), 
                        employment = openapi_client.models.payroll_employment_record.PayrollEmploymentRecord(
                            employer_name = 'ACME INC', 
                            legal_entity_id = '752760000', 
                            original_hire_date = 1527832800, 
                            latest_hire_date = 1527832800, 
                            latest_pay_period_end_date = 1596175201, 
                            latest_pay_date = 1596175200, 
                            days_since_last_pay = 10, 
                            number_pay_cadence_without_pay = 1, 
                            employment_end_date = 1527832800, 
                            employment_duration = 'P1Y6M0D', 
                            employer_address = [
                                openapi_client.models.payroll_employer_address.PayrollEmployerAddress(
                                    address1 = 'Address 1', 
                                    city = 'City', 
                                    state = 'TX', 
                                    zip = '99999', )
                                ], 
                            employment_status_code = 'A', 
                            employment_status_name = 'Active', 
                            derived_employment_status = True, 
                            work_level_code = 'FT', 
                            work_level_name = 'Full Time-Regular', 
                            work_level_status = 'Full Time', 
                            position_title = 'Shift Supervisor', 
                            position_duration = 'P1Y6M0D', ), 
                        income = openapi_client.models.payroll_voie_income_record.PayrollVOIEIncomeRecord(
                            pay_frequency = 'Weekly', 
                            pay_type = 'Daily', 
                            base_pay_rate = 1234.56, 
                            base_pay_rate_unit = 'Annual', 
                            oldest_pay_statement_available = '1527832900', 
                            annual_income = [
                                openapi_client.models.annual_income.AnnualIncome(
                                    year = '2022', 
                                    gross_pay_amount_ytd = 123.45, 
                                    net_pay_amount_ytd = 123.45, 
                                    base_pay_amount_ytd = 123.45, 
                                    overtime_pay_amount_ytd = 123.45, 
                                    other_pay_amount_ytd = 123.45, 
                                    commission_pay_amount_ytd = 123.45, )
                                ], 
                            monthly_income = openapi_client.models.monthly_income.MonthlyIncome(
                                estimated_monthly_base_pay = 123.45, 
                                estimated_monthly_overtime_pay = 123.45, 
                                estimated_monthly_bonus_pay = 123.45, 
                                estimated_monthly_other_pay = 123.45, 
                                estimated_monthly_total_pay = 123.45, 
                                estimated_monthly_commission_pay = 123.45, ), 
                            direct_pay_statements = [
                                openapi_client.models.direct_pay_statements.DirectPayStatements(
                                    payroll_pay_history_id = 'qsrt2hmjnf', 
                                    last_pay_period_indicator = True, 
                                    main_pay_statement_fields = openapi_client.models.main_pay_statement_fields.MainPayStatementFields(
                                        pay_date = 1607450357, 
                                        start_date = 1607450357, 
                                        end_date = 1607450357, 
                                        pay_period_hours = 39.75, 
                                        pay_frequency = 'Weekly', 
                                        pay_type = 'Hourly', 
                                        gross_pay_amount = 755.25, 
                                        gross_pay_amount_ytd = 4256, 
                                        net_pay_amount = 608.77, 
                                        net_pay_amount_ytd = 2345.99, ), 
                                    earnings = [
                                        openapi_client.models.earnings.Earnings(
                                            name = 'bonusPayAmount', 
                                            type = 'bonus', 
                                            rate = 19, 
                                            amount = 589, 
                                            amount_ytd = 14301.25, )
                                        ], 
                                    deductions = [
                                        openapi_client.models.deductions.Deductions(
                                            type = 'State tax', 
                                            amount = 4.28, )
                                        ], )
                                ], ), )
                    ],
                gse_enabled = True,
                report_style = 'credentialedPayroll'
            )
        else:
            return VOIEPayrollReport(
        )
        """

    def testVOIEPayrollReport(self):
        """Test VOIEPayrollReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
