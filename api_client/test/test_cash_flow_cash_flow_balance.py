# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cash_flow_cash_flow_balance import CashFlowCashFlowBalance

class TestCashFlowCashFlowBalance(unittest.TestCase):
    """CashFlowCashFlowBalance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CashFlowCashFlowBalance:
        """Test CashFlowCashFlowBalance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CashFlowCashFlowBalance`
        """
        model = CashFlowCashFlowBalance()
        if include_optional:
            return CashFlowCashFlowBalance(
                monthly_cash_flow_balances = [
                    openapi_client.models.cash_flow_monthly_cash_flow_balances.CashFlowMonthlyCashFlowBalances(
                        month = 1512111600, 
                        min_daily_balance = 3479.39, 
                        max_daily_balance = 3479.39, 
                        average_daily_balance = 3479.39, 
                        standard_deviation_of_daily_balance = '20', 
                        number_of_days_negative_balance = '6', 
                        number_of_days_positive_balance = '0', )
                    ],
                min_daily_balance = 3479.39,
                max_daily_balance = 3479.39,
                twelve_month_average_daily_balance = 3479.39,
                six_month_average_daily_balance = 3479.39,
                two_month_average_daily_balance = 3479.39,
                twelve_month_standard_deviation_of_daily_balance = '20',
                six_month_standard_deviation_of_daily_balance = '20',
                two_month_standard_deviation_of_daily_balance = '20',
                number_days_negative_balance = '6',
                number_of_days_positive_balance = '0'
            )
        else:
            return CashFlowCashFlowBalance(
                monthly_cash_flow_balances = [
                    openapi_client.models.cash_flow_monthly_cash_flow_balances.CashFlowMonthlyCashFlowBalances(
                        month = 1512111600, 
                        min_daily_balance = 3479.39, 
                        max_daily_balance = 3479.39, 
                        average_daily_balance = 3479.39, 
                        standard_deviation_of_daily_balance = '20', 
                        number_of_days_negative_balance = '6', 
                        number_of_days_positive_balance = '0', )
                    ],
                min_daily_balance = 3479.39,
                max_daily_balance = 3479.39,
                twelve_month_average_daily_balance = 3479.39,
                six_month_average_daily_balance = 3479.39,
                two_month_average_daily_balance = 3479.39,
                twelve_month_standard_deviation_of_daily_balance = '20',
                two_month_standard_deviation_of_daily_balance = '20',
                number_of_days_positive_balance = '0',
        )
        """

    def testCashFlowCashFlowBalance(self):
        """Test CashFlowCashFlowBalance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
