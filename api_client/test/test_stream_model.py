# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stream_model import StreamModel

class TestStreamModel(unittest.TestCase):
    """StreamModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StreamModel:
        """Test StreamModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StreamModel`
        """
        model = StreamModel()
        if include_optional:
            return StreamModel(
                cadence = 30,
                id = '1',
                payee = 'Walmart',
                payor = 'Elizabeth Johnson',
                recency = 2,
                transaction_ids = ["6010290887","6010290914"]
            )
        else:
            return StreamModel(
                cadence = 30,
                id = '1',
                payee = 'Walmart',
                payor = 'Elizabeth Johnson',
                recency = 2,
                transaction_ids = ["6010290887","6010290914"],
        )
        """

    def testStreamModel(self):
        """Test StreamModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
