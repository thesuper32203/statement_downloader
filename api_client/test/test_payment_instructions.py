# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.payment_instructions import PaymentInstructions

class TestPaymentInstructions(unittest.TestCase):
    """PaymentInstructions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentInstructions:
        """Test PaymentInstructions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentInstructions`
        """
        model = PaymentInstructions()
        if include_optional:
            return PaymentInstructions(
                payment_instruction = [
                    openapi_client.models.payment_instruction.PaymentInstruction(
                        type = 'ach', 
                        account_number = '124344454', 
                        tan_enabled = True, 
                        descriptors = [
                            openapi_client.models.descriptor.Descriptor(
                                type = 'routingNumber', 
                                value = '2434345', )
                            ], 
                        transfer_in_enabled = True, 
                        transfer_out_enabled = True, )
                    ]
            )
        else:
            return PaymentInstructions(
        )
        """

    def testPaymentInstructions(self):
        """Test PaymentInstructions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
