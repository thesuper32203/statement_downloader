# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.indicator import Indicator

class TestIndicator(unittest.TestCase):
    """Indicator unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Indicator:
        """Test Indicator
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Indicator`
        """
        model = Indicator()
        if include_optional:
            return Indicator(
                potential_settlement_date = 'Wed Mar 29 20:00:00 EDT 2023',
                composite_score = 6,
                score_indicator = 'Likely to Settle',
                reasons = openapi_client.models.reason_item.ReasonItem(
                    recent_balance = 78, 
                    balance_history = 23, 
                    nsf_history = 40, 
                    recent_nsf_history = 34, 
                    recurring_nsf = 34, 
                    spend_history = 44, 
                    deposit_history = 10, 
                    transaction_amount = 65, )
            )
        else:
            return Indicator(
                potential_settlement_date = 'Wed Mar 29 20:00:00 EDT 2023',
                composite_score = 6,
                score_indicator = 'Likely to Settle',
                reasons = openapi_client.models.reason_item.ReasonItem(
                    recent_balance = 78, 
                    balance_history = 23, 
                    nsf_history = 40, 
                    recent_nsf_history = 34, 
                    recurring_nsf = 34, 
                    spend_history = 44, 
                    deposit_history = 10, 
                    transaction_amount = 65, ),
        )
        """

    def testIndicator(self):
        """Test Indicator"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
