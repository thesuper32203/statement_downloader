# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.foresight_analytics_report_constraints import ForesightAnalyticsReportConstraints

class TestForesightAnalyticsReportConstraints(unittest.TestCase):
    """ForesightAnalyticsReportConstraints unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ForesightAnalyticsReportConstraints:
        """Test ForesightAnalyticsReportConstraints
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ForesightAnalyticsReportConstraints`
        """
        model = ForesightAnalyticsReportConstraints()
        if include_optional:
            return ForesightAnalyticsReportConstraints(
                analytics_report_data = openapi_client.models.foresight_analytics_report_data.ForesightAnalyticsReportData(
                    for_cra_purpose = True, 
                    segments = openapi_client.models.foresight_analytics_report_data_segments.ForesightAnalyticsReportData_segments(
                        geolocation = [
                            openapi_client.models.geo_location_items.GeoLocationItems(
                                label = 'POSTAL_CODE', 
                                value = '85123', )
                            ], ), 
                    analytics = ["benchmarking","forecasting"], 
                    time_interval_types = ["MONTHLY_CALENDAR"], ),
                account_ids = '5011648377 5011648378 5011648379',
                from_date = 1607450357
            )
        else:
            return ForesightAnalyticsReportConstraints(
        )
        """

    def testForesightAnalyticsReportConstraints(self):
        """Test ForesightAnalyticsReportConstraints"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
