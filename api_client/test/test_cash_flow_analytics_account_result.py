# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cash_flow_analytics_account_result import CashFlowAnalyticsAccountResult

class TestCashFlowAnalyticsAccountResult(unittest.TestCase):
    """CashFlowAnalyticsAccountResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CashFlowAnalyticsAccountResult:
        """Test CashFlowAnalyticsAccountResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CashFlowAnalyticsAccountResult`
        """
        model = CashFlowAnalyticsAccountResult()
        if include_optional:
            return CashFlowAnalyticsAccountResult(
                account_details = openapi_client.models.obb_account_details.ObbAccountDetails(
                    account_number_display = '8888', 
                    account_owner = openapi_client.models.obb_account_owner.ObbAccountOwner(
                        address = '123 Main St, Portland, OR 12345', 
                        name = 'Johnny Appleseed', ), 
                    aggregation_attempt_date = '2022-03-30T14:47:19-07:00', 
                    aggregation_status_code = 0, 
                    aggregation_success_date = '2022-03-30T14:47:19-07:00', 
                    currency = 'USD', 
                    current_balance = 2239.22, 
                    id = 5011648377, 
                    institution = openapi_client.models.obb_institution.ObbInstitution(
                        institution_icon_url = 'https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/101732/icon.svg', 
                        institution_id = 12345, 
                        institution_name = 'Wells Fargo', 
                        institution_primary_color = '#1B3E4A', ), 
                    institution_login_id = 1007302745, 
                    name = 'Super Checking', 
                    real_account_number_last4 = 5678, 
                    status = 'active', 
                    type = 'checking', ),
                account_id = 5011648377,
                cashflow_analytics_metrics = openapi_client.models.cash_flow_analytics_metrics.CashFlowAnalyticsMetrics(
                    inflow = openapi_client.models.cash_flow_inflow_attributes.CashFlowInflowAttributes(
                        average_deposit_by_month_for_the_report_time_period = [
                            openapi_client.models.obb_date_range_and_amount.ObbDateRangeAndAmount(
                                amount = 890.99, 
                                period = 'last30to1', 
                                period_begin_date = '2022-03-01', 
                                period_end_date = '2022-03-30', )
                            ], 
                        count_deposits_by_month_for_the_report_time_period = [
                            openapi_client.models.obb_date_range_and_count.ObbDateRangeAndCount(
                                count = 5, 
                                period = 'last30to1', 
                                period_begin_date = '2022-03-01', 
                                period_end_date = '2022-03-30', )
                            ], 
                        historic_count_of_deposit_transactions = 20, 
                        historic_sum_of_deposits = 389.22, 
                        maximum_deposit_by_month_for_the_report_time_period = [
                            openapi_client.models.obb_date_range_and_amount.ObbDateRangeAndAmount(
                                amount = 890.99, 
                                period = 'last30to1', 
                                period_begin_date = '2022-03-01', 
                                period_end_date = '2022-03-30', )
                            ], 
                        minimum_deposit_by_month_for_the_report_time_period = [
                            
                            ], 
                        sum_deposits_by_month_for_the_report_time_period = [
                            
                            ], ), 
                    negative_triggers = openapi_client.models.cash_flow_negative_triggers.CashFlowNegativeTriggers(
                        insufficient_fund_fees = openapi_client.models.cash_flow_insufficient_funds_fees.CashFlowInsufficientFundsFees(
                            count_of_transactions_for_the_report_time_period = 1, 
                            sum_of_transactions_for_the_report_time_period = -1.65, 
                            transactions = [
                                openapi_client.models.insufficient_funds_transaction.InsufficientFundsTransaction(
                                    amount = -1.65, 
                                    description = 'OVERDRAFT FEE', 
                                    memo = 'NSF', 
                                    posted_date = '2022-12-19', 
                                    transaction_id = 23092384290, )
                                ], ), ), 
                    outflow = openapi_client.models.cash_flow_outflow_attributes.CashFlowOutflowAttributes(
                        average_withdrawal_by_month_for_the_report_time_period = [
                            
                            ], 
                        count_withdrawals_by_month_for_the_report_time_period = [
                            openapi_client.models.obb_date_range_and_count.ObbDateRangeAndCount(
                                count = 5, 
                                period = 'last30to1', 
                                period_begin_date = '2022-03-01', 
                                period_end_date = '2022-03-30', )
                            ], 
                        historic_count_of_withdrawal_transactions = 20, 
                        historic_sum_of_withdrawals = 925.66, 
                        maximum_withdrawal_by_month_for_the_report_time_period = [
                            
                            ], 
                        minimum_withdrawal_by_month_for_the_report_time_period = [
                            
                            ], 
                        sum_withdrawals_by_month_for_the_report_time_period = [
                            
                            ], ), 
                    revenue_by_month_for_the_report_time_period = [
                        
                        ], 
                    revenue_for_the_report_time_period = 43893.44, 
                    transaction_analytics = openapi_client.models.cash_flow_transaction_analytics_attributes.CashFlowTransactionAnalyticsAttributes(
                        activity_deposits_credits_for_the_report_time_period = [
                            openapi_client.models.cash_flow_activity_deposits_credits.CashFlowActivityDepositsCredits(
                                date = '2020-03-25', 
                                deposits_credits = 500, 
                                transaction_description = 'VENMO            CASHOUT', )
                            ], 
                        activity_withdrawals_debits_for_the_report_time_period = [
                            openapi_client.models.cash_flow_activity_withdrawals_debits.CashFlowActivityWithdrawalsDebits(
                                date = '2020-03-25', 
                                transaction_description = 'Payment to Chase card ending in', 
                                withdrawals_debits = 15.69, )
                            ], 
                        average_transaction_value_by_month_for_the_report_time_period = [
                            
                            ], 
                        historic_weeks_with_zero_transactions = openapi_client.models.cash_flow_num_weeks_zeros.CashFlowNumWeeksZeros(
                            historic_number_of_weeks_with_data_available = 10, 
                            historic_number_of_weeks_zero_transactions = 5, 
                            historic_weeks_with_zero_transactions = [
                                openapi_client.models.obb_week_of_year.ObbWeekOfYear(
                                    from_date = '2020-01-01', 
                                    to_date = '2020-01-07', 
                                    week = 1, )
                                ], ), 
                        last_transaction_date = [
                            openapi_client.models.cash_flow_transaction_analytics_attributes_last_transaction_date_inner.CashFlowTransactionAnalyticsAttributes_lastTransactionDate_inner(
                                date = '2020-03-25', 
                                deposits_credits = 500, 
                                withdrawals_debits = 500, 
                                zero_amount_transaction = 0, 
                                transaction_description = 'VENMO            CASHOUT', )
                            ], 
                        net_cash_flow_by_month_for_the_report_time_period = [
                            
                            ], 
                        net_cash_flow_for_the_report_time_period = 1544.94, ), ),
                current_report_request = openapi_client.models.obb_current_report_request_details.ObbCurrentReportRequestDetails(
                    report_begin_date = '2022-03-01', 
                    report_end_date = '2022-03-30', 
                    report_request_date = '2022-03-30T14:47:19-07:00', 
                    requested_days_for_report = 90, 
                    requested_report_begin_date = '2022-01-01', ),
                historic_data_availability = openapi_client.models.obb_data_availability.ObbDataAvailability(
                    historic_availability_begin_date = '2022-03-01', 
                    historic_availability_end_date = '2022-03-30', 
                    historic_available_days = 30, 
                    historic_data_availability = 'Data is available from 2022-03-01 to 2022-03-30', )
            )
        else:
            return CashFlowAnalyticsAccountResult(
                account_details = openapi_client.models.obb_account_details.ObbAccountDetails(
                    account_number_display = '8888', 
                    account_owner = openapi_client.models.obb_account_owner.ObbAccountOwner(
                        address = '123 Main St, Portland, OR 12345', 
                        name = 'Johnny Appleseed', ), 
                    aggregation_attempt_date = '2022-03-30T14:47:19-07:00', 
                    aggregation_status_code = 0, 
                    aggregation_success_date = '2022-03-30T14:47:19-07:00', 
                    currency = 'USD', 
                    current_balance = 2239.22, 
                    id = 5011648377, 
                    institution = openapi_client.models.obb_institution.ObbInstitution(
                        institution_icon_url = 'https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/101732/icon.svg', 
                        institution_id = 12345, 
                        institution_name = 'Wells Fargo', 
                        institution_primary_color = '#1B3E4A', ), 
                    institution_login_id = 1007302745, 
                    name = 'Super Checking', 
                    real_account_number_last4 = 5678, 
                    status = 'active', 
                    type = 'checking', ),
                account_id = 5011648377,
                current_report_request = openapi_client.models.obb_current_report_request_details.ObbCurrentReportRequestDetails(
                    report_begin_date = '2022-03-01', 
                    report_end_date = '2022-03-30', 
                    report_request_date = '2022-03-30T14:47:19-07:00', 
                    requested_days_for_report = 90, 
                    requested_report_begin_date = '2022-01-01', ),
                historic_data_availability = openapi_client.models.obb_data_availability.ObbDataAvailability(
                    historic_availability_begin_date = '2022-03-01', 
                    historic_availability_end_date = '2022-03-30', 
                    historic_available_days = 30, 
                    historic_data_availability = 'Data is available from 2022-03-01 to 2022-03-30', ),
        )
        """

    def testCashFlowAnalyticsAccountResult(self):
        """Test CashFlowAnalyticsAccountResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
