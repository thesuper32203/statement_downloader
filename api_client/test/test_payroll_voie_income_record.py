# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.payroll_voie_income_record import PayrollVOIEIncomeRecord

class TestPayrollVOIEIncomeRecord(unittest.TestCase):
    """PayrollVOIEIncomeRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayrollVOIEIncomeRecord:
        """Test PayrollVOIEIncomeRecord
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayrollVOIEIncomeRecord`
        """
        model = PayrollVOIEIncomeRecord()
        if include_optional:
            return PayrollVOIEIncomeRecord(
                pay_frequency = 'Weekly',
                pay_type = 'Daily',
                base_pay_rate = 1234.56,
                base_pay_rate_unit = 'Annual',
                oldest_pay_statement_available = '1527832900',
                annual_income = [
                    openapi_client.models.annual_income.AnnualIncome(
                        year = '2022', 
                        gross_pay_amount_ytd = 123.45, 
                        net_pay_amount_ytd = 123.45, 
                        base_pay_amount_ytd = 123.45, 
                        overtime_pay_amount_ytd = 123.45, 
                        other_pay_amount_ytd = 123.45, 
                        commission_pay_amount_ytd = 123.45, )
                    ],
                monthly_income = openapi_client.models.monthly_income.MonthlyIncome(
                    estimated_monthly_base_pay = 123.45, 
                    estimated_monthly_overtime_pay = 123.45, 
                    estimated_monthly_bonus_pay = 123.45, 
                    estimated_monthly_other_pay = 123.45, 
                    estimated_monthly_total_pay = 123.45, 
                    estimated_monthly_commission_pay = 123.45, ),
                direct_pay_statements = [
                    openapi_client.models.direct_pay_statements.DirectPayStatements(
                        payroll_pay_history_id = 'qsrt2hmjnf', 
                        last_pay_period_indicator = True, 
                        main_pay_statement_fields = openapi_client.models.main_pay_statement_fields.MainPayStatementFields(
                            pay_date = 1607450357, 
                            start_date = 1607450357, 
                            end_date = 1607450357, 
                            pay_period_hours = 39.75, 
                            pay_frequency = 'Weekly', 
                            pay_type = 'Hourly', 
                            gross_pay_amount = 755.25, 
                            gross_pay_amount_ytd = 4256, 
                            net_pay_amount = 608.77, 
                            net_pay_amount_ytd = 2345.99, ), 
                        earnings = [
                            openapi_client.models.earnings.Earnings(
                                name = 'bonusPayAmount', 
                                type = 'bonus', 
                                rate = 19, 
                                amount = 589, 
                                amount_ytd = 14301.25, )
                            ], 
                        deductions = [
                            openapi_client.models.deductions.Deductions(
                                type = 'State tax', 
                                amount = 4.28, )
                            ], )
                    ]
            )
        else:
            return PayrollVOIEIncomeRecord(
        )
        """

    def testPayrollVOIEIncomeRecord(self):
        """Test PayrollVOIEIncomeRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
