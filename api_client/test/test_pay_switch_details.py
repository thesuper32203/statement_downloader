# coding: utf-8

"""
    Open Finance

    OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.31.2
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pay_switch_details import PaySwitchDetails

class TestPaySwitchDetails(unittest.TestCase):
    """PaySwitchDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaySwitchDetails:
        """Test PaySwitchDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaySwitchDetails`
        """
        model = PaySwitchDetails()
        if include_optional:
            return PaySwitchDetails(
                customer_id = '1005061234',
                customer_type = 'testing',
                switch_id = '602414d84f9a1980cf5eafcc',
                switch_status = 'completed',
                failure_reason = 'unknown-failure',
                created_date = '2023-07-25T08:14:20Z',
                updated_date = '2023-07-25T08:30:20Z',
                authenticated = True,
                provider = openapi_client.models.pay_switch_details_provider.PaySwitchDetails_provider(
                    id = '607e249736b9f053b536bde0', 
                    name = 'Netflix', ),
                payment_methods = [
                    openapi_client.models.pay_switch_details_payment_methods_inner.PaySwitchDetails_paymentMethods_inner(
                        type = 'card', 
                        title = 'Sample Card', 
                        brand = 'Mastercard', 
                        bank_identifier = '110000000', 
                        ends_with = '4126', 
                        bank_account_type = 'Checking', )
                    ]
            )
        else:
            return PaySwitchDetails(
                customer_id = '1005061234',
                customer_type = 'testing',
                switch_id = '602414d84f9a1980cf5eafcc',
                switch_status = 'completed',
                created_date = '2023-07-25T08:14:20Z',
                updated_date = '2023-07-25T08:30:20Z',
                provider = openapi_client.models.pay_switch_details_provider.PaySwitchDetails_provider(
                    id = '607e249736b9f053b536bde0', 
                    name = 'Netflix', ),
                payment_methods = [
                    openapi_client.models.pay_switch_details_payment_methods_inner.PaySwitchDetails_paymentMethods_inner(
                        type = 'card', 
                        title = 'Sample Card', 
                        brand = 'Mastercard', 
                        bank_identifier = '110000000', 
                        ends_with = '4126', 
                        bank_account_type = 'Checking', )
                    ],
        )
        """

    def testPaySwitchDetails(self):
        """Test PaySwitchDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
